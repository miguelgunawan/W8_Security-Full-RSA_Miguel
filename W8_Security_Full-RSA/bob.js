const crypto = require('crypto');

const bobPrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDbMnP/Y0JssCSw
ldv74gch2tva2aI11kzkqF8kH4CMFtv8ci12OysuzBsxMGfgn1v8Z3ztLGI1aY/6
scQ6enVyp47SodgfLTkD9f9rOl+Hvws3PJqeeMwFoO3crEoGuSA1A7XfZ9w18cvJ
BfqQsdtUMS0Z8w/v87kC4M/0sFwRI3/nE7+sOp9fbwWfQH+BdaNIbZq+DzkvOyU7
aLMJUnajtTS9lkisb7Npp7pwwyTQRgrDKDJyQEnUK49kWIoyFiptjyUcKYVqdkCu
Xviy88SnmKpvE0drqwhCdZKhwd45fMx+MnDv1HSO3NgdbI5n7Es/htUNfQ/tfAFS
wiYpoaJpAgMBAAECggEACejXMRz+qsU8MHxAGDCevtWHfmrqXfjmJNfdQxH9hR2f
cmNrxi/BsZC7wCgtEVKxkaJFLRzXvlI+OXdHvAs/O9rnMiYDI4w61nUYU6I5IWWo
SVSKtPFeX+Gtc5WCZ/Yhr0D4U0xxunBqzrq866KdVj6bQo5uEnmmtMKDeKDkeKUS
hNkHA+W/dJ0qYYdaw4o4+NMtSWK1N8QA8O3CVR4rx99bdnLn7rVd4ZlZ8TN1inNZ
NDfIoPQLCXVUYwGIt4p9YHr8z26BO2eIlGBZueM3JqDHqts0aKyPgBT1GXcGJ8/8
VG3RwUkoLDIthw5jJaNaaLyEdy0o3Bnz2+oXNfUDdQKBgQDtEvdA9SAOlO18uvtz
z33efT4zF94LLrncrc38YWa47fK5XfHzLyD86EQtb+1kDcDv4o2g8Oaa7ylS/LFB
3zOOkOhoT4i4TQvC2E5wN9p5LkpVk5tRMz5ZVO6G21aS8kr0U/fRGZYbaKCB5sTc
OSPDt896u9SUOpl0M5TVsq/tMwKBgQDssiN/abjFy9e4LmNbLDEUyMDEM80eXHWQ
zP73ilnGGGXX5dnPC+FINZ+qORa2Q/6UdEMF0fplWEWO6Fr+7b4zUsAHYIhkwxzG
uNWmzcruQ9vyLwZRPPOdrYp+jdhYbPj6ZnKdNk0de/csqApcJUBYLEKASudj5Djn
ZvGpOKCZ8wKBgHsv7badKMkq7bRwXJSy7o6buaRG9KQO5Zkb3vsTiZLyYbuca0qX
5KZF8pdBn7LryqNbr4g/ZTSArZJnp5u45UthVMJPAZXywve9+hQpkaaCPTH2fzBU
VkOI9GCyvGui5vvKXe0TRIJ9fVnClexw7HqYmoEF9NIJGQ/edaoNLYktAoGBAKrl
O4gE9ymoscoDhC0RzSYqhDOlCxY+v4ua1wQ3WfYTK4UkKYy6ESAnx24J5gIXObpJ
7xJGtzlw8FfsH7csREWeG5O3+QJ3dVFtpqTWtQwu5qEHntIM5gAUiogxNeEyXNm+
Gka0LB17oc0WTtSU+M4wtpsWeda/su4wf48kmaBNAoGAXOEFEbMB1OsP7CqoTla5
ErrrD8hqlKRMDFzAtSHTOgkbu94CgiyApS1fV7QTKmUX68IEuhjH42uStRLaarpf
NcQ3yvACrrjzVP9JlREYjo4bdcwk9Coo0vBV24SzmIV6sOd656cRqX5sjKS3BBe/
XHKePSv6jF2013nzHfhkHeI=
-----END PRIVATE KEY-----`

const bobPrivateKey = crypto.createPrivateKey(bobPrivateKeyPem);

const alicePublicKeyPem = `-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApfhPyoiqXnqc3QRdb85L
tBvxlGl4zYK5/K0qFYj9p+o41mymvGw/yJVOP8YcYSQNsxo78nPDZDoirT9+Ic5F
nMS/IxzO5vKk5Oa3Ua40S8s8Jy2NoYzBRCpREYZ9FIGR+YonY3CyCIoWBVevPdc1
764yJNtkXLJ1GnsZ/wCPnll9sXKiCDt1B4OfjbCV7f9fT4cFLq3lT8AejHu1TOTu
5TiJ9LvbIK0FqfVyMH/aiKMYXSkV76Y96XoZn381G2N3QfVexlqeK1Jhtz70KCDW
9fZDMizm/b0erivon2JrQQj95SMUwUCfA9ZpJ4J3Y197NeXcaF7L05+u/GVR2HXD
VQIDAQAB
-----END PUBLIC KEY-----`;

const alicePublicKey = crypto.createPublicKey(alicePublicKeyPem);
const signatureHex = "02cb51bee69a4a000685a02a06798dfe84d02efbfbe6ea3ac5709f7de33b634e9f90ca9f8bbd586e73cee8407785c2c8dff07f270671ede53a73c497679f30ecb88ca3d5006d235755e6667dc7ec8b5aca3ababc338372168cf8a3c0802959c6fa108c6a3e2cddb23d80f2876f39b0a7f763ebf51e7405a60947479324f82151222b6ff629be6a21da2ba8ae6f6db727436a4938ee12fb0ce280e53cc8e29cacd986f124037cafed619f75ea1f15a0e7596ed7b81c4d2ac0f344e9e9a12ad7f27c6b3881f23dad2d696f01bef4441a71c3ee6f74082a7d7bb588f90ff191c7d1462036f3bdb3f10b891153f3cde1e6cd4b3ee97840350263b94fe36c870d707c";
const signature = Buffer.from(signatureHex, "hex");

const ciphertextHex = "d129dc0221cbc547f3effde028652177c9ed0edcce7367795083f77be7b6e7ef112cbcc6e22566c07f309ac6b7c8281a9c6b255e70664f1415f432a62298da8f7e2e58ebbc7664581d1d75253c287cde5f645549a4ab64d6c62c4fccd059a3d1adcd0b994b7c1ead828ae21f37257291328d83fa38406284c4af324fba51283dcc1eca305df8ef3cdb42389d41b86b4bf89f3f3b83575d1e03c6527db192c1c67b5d403e832292eb4290523ec89fde8075262e14f810eca3d28c1ae0a9b9c67e008e189980b912c12a7c60889bede97ed4d826a03a57c6376ad4862ca34e7e9b10dae7c8e97f1aaf22ccfd8e7f569fc798ef99f752af0807575028e94fbb30d1";
const ciphertext = Buffer.from(ciphertextHex, "hex");

const recoveredPlaintext = crypto.privateDecrypt(bobPrivateKey, ciphertext);
const message = recoveredPlaintext.toString("utf8");
const data = Buffer.from(message)

const isValid = crypto.verify("sha256", data, alicePublicKey, signature);
console.log("Signature verification:", isValid);

console.log("Message:", message);